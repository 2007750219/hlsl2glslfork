float4x4 world;
float4x4 view;
float4x4 proj;

sampler2D diffuse_map;
sampler2DShadow shadow_map;

struct VS_INPUT {
	float4 position : POSITION;
	float2 uv : TEXCOORD0;
	int vertex_id : SV_VertexID;
	int instance_id : SV_InstanceID;
};

struct PS_INPUT {
	float4 position : POSITION;
	float2 uv : TEXCOORD0;
};

PS_INPUT vs_main(VS_INPUT input) {
	PS_INPUT o;
	float4 wp = mul(input.position, world);
	o.position = mul(wp, proj);
	o.uv = input.uv;

	int asd = 12 % 2;

	return o;
}

half4 ps_main(PS_INPUT input, int primitive_id : SV_PrimitiveID) : COLOR0 {
	half4 c = half4(1, 1, 1, (float)primitive_id);
	c = tex2D(diffuse_map, input.uv);
	float depth = 1;
	float4 shadow = float4(input.uv, depth, 1);
	c *= tex2Dproj(shadow_map, shadow).r;
	return c;
}
